syntax = "proto3";

package chunksink;

import "common.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/pascalhuerst/session-recorder/protocols/go/chunksink";

message Chunks {
    string recorderID = 1;
    string sessionID = 2;
    uint32 chunkCount = 3;
    google.protobuf.Timestamp timeCreated = 4;

    repeated uint32 data = 5;
}

message GetCommandRequest {
    string recorderID = 1;
}

message CmdCutSession {}
message Reboot{}

message Command {
    oneof command {
        Reboot reboot = 1;
        CmdCutSession cmdCutSession = 2;
    }
}

service ChunkSink {
    // Unary
    rpc SetRecorderStatus(common.RecorderStatus) returns (common.Respone);
    rpc SetChunks(Chunks) returns (common.Respone);

    // Server streaming
    rpc GetCommands(GetCommandRequest) returns (stream Command);
}